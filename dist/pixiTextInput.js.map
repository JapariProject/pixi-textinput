{"version":3,"file":"pixiTextInput.js","sources":["../src/input.js"],"sourcesContent":["import * as PIXI from 'pixi.js'\n\n\nexport class TextInput extends PIXI.Container {\n\n    constructor (styles) {\n        super ();\n        this._input_style = Object.assign (\n            {\n                position : 'absolute',\n                background : 'none',\n                border : 'none',\n                outline : 'none',\n                transformOrigin : '0 0',\n                lineHeight : '1'\n            },\n            styles.input\n        );\n\n        if (styles.box) {\n            this._box_generator = typeof styles.box === 'function' ? styles.box : new DefaultBoxGenerator (styles.box)\n        } else {\n            this._box_generator = null;\n        }\n        if (this._input_style.hasOwnProperty ('multiline')) {\n            this._multiline = !!this._input_style.multiline;\n            delete this._input_style.multiline\n        } else {\n            this._multiline = false;\n        }\n\n        this._box_cache = {};\n        this._previous = {};\n        this._dom_added = false;\n        this._dom_visible = true;\n        this._placeholder = '';\n        this._placeholderColor = 0xa9a9a9;\n        this._selection = [0, 0];\n        this._restrict_value = '';\n        this._createDOMInput ();\n        this.substituteText = true;\n        this._setState ('DEFAULT');\n        this._addListeners ()\n    }\n\n\n    // GETTERS & SETTERS\n\n    get substituteText () {\n        return this._substituted\n    }\n\n    set substituteText (substitute) {\n        if (this._substituted == substitute)\n            return\n\n        this._substituted = substitute\n\n        if (substitute) {\n            this._createSurrogate ()\n            this._dom_visible = false\n        } else {\n            this._destroySurrogate ()\n            this._dom_visible = true\n        }\n        this.placeholder = this._placeholder\n        this._update ()\n    }\n\n    get placeholder () {\n        return this._placeholder\n    }\n\n    set placeholder (text) {\n        this._placeholder = text\n        if (this._substituted) {\n            this._updateSurrogate ()\n            this._dom_input.placeholder = ''\n        } else {\n            this._dom_input.placeholder = text\n        }\n    }\n\n    get disabled () {\n        return this._disabled\n    }\n\n    set disabled (disabled) {\n        this._disabled = disabled\n        this._dom_input.disabled = disabled\n        this._setState (disabled ? 'DISABLED' : 'DEFAULT')\n    }\n\n    get maxLength () {\n        return this._max_length\n    }\n\n    set maxLength (length) {\n        this._max_length = length\n        this._dom_input.setAttribute ('maxlength', length)\n    }\n\n    get restrict () {\n        return this._restrict_regex\n    }\n\n    set restrict (regex) {\n        if (regex instanceof RegExp) {\n            regex = regex.toString ().slice (1, -1)\n\n            if (regex.charAt (0) !== '^')\n                regex = '^' + regex\n\n            if (regex.charAt (regex.length - 1) !== '$')\n                regex = regex + '$'\n\n            regex = new RegExp (regex)\n        } else {\n            regex = new RegExp ('^[' + regex + ']*$')\n        }\n\n        this._restrict_regex = regex\n    }\n\n    get text () {\n        return this._dom_input.value\n    }\n\n    set text (text) {\n        this._dom_input.value = text\n        if (this._substituted) this._updateSurrogate ()\n    }\n\n    get htmlInput () {\n        return this._dom_input\n    }\n\n    focus () {\n        if (this._substituted && !this.dom_visible)\n            this._setDOMInputVisible (true)\n\n        this._dom_input.focus ()\n\n    }\n\n    blur () {\n        this._dom_input.blur ()\n    }\n\n    select () {\n        this.focus ()\n        this._dom_input.select ()\n    }\n\n    setInputStyle (key, value) {\n        this._input_style[key] = value\n        this._dom_input.style[key] = value\n\n        if (this._substituted && (key === 'fontFamily' || key === 'fontSize'))\n            this._updateFontMetrics ()\n\n        if (this._last_renderer)\n            this._update ()\n    }\n\n    destroy (options) {\n        this._destroyBoxCache ()\n        super.destroy (options)\n    }\n\n\n    // SETUP\n\n    _createDOMInput () {\n        if (this._multiline) {\n            this._dom_input = document.createElement ('textarea')\n            this._dom_input.style.resize = 'none'\n        } else {\n            this._dom_input = document.createElement ('input')\n            this._dom_input.type = 'text'\n        }\n\n        for (let key in this._input_style) {\n            this._dom_input.style[key] = this._input_style[key]\n        }\n    }\n\n    _addListeners () {\n        this.on ('added', this._onAdded.bind (this))\n        this.on ('removed', this._onRemoved.bind (this))\n        this._dom_input.addEventListener ('keydown', this._onInputKeyDown.bind (this))\n        this._dom_input.addEventListener ('input', this._onInputInput.bind (this))\n        this._dom_input.addEventListener ('keyup', this._onInputKeyUp.bind (this))\n        this._dom_input.addEventListener ('focus', this._onFocused.bind (this))\n        this._dom_input.addEventListener ('blur', this._onBlurred.bind (this))\n    }\n\n    _onInputKeyDown (e) {\n        this._selection = [\n            this._dom_input.selectionStart,\n            this._dom_input.selectionEnd\n        ]\n\n        this.emit ('keydown', e.keyCode)\n    }\n\n    _onInputInput (e) {\n        if (this._restrict_regex);\n            this._applyRestriction ();\n\n        if (this._substituted)\n            this._updateSubstitution ();\n\n        this.emit ('input', this.text);\n    }\n\n    _onInputKeyUp (e) {\n        this.emit ('keyup', e.keyCode)\n    }\n\n    _onFocused () {\n        this._setState ('FOCUSED')\n        this.emit ('focus')\n    }\n\n    _onBlurred () {\n        this._setState ('DEFAULT')\n        this.emit ('blur')\n    }\n\n    _onAdded () {\n        document.body.appendChild (this._dom_input)\n        this._dom_input.style.display = 'none'\n        this._dom_added = true\n    }\n\n    _onRemoved () {\n        document.body.removeChild (this._dom_input)\n        this._dom_added = false\n    }\n\n    _setState (state) {\n        this.state = state\n        this._updateBox ()\n        if (this._substituted)\n            this._updateSubstitution ()\n    }\n\n\n    // RENDER & UPDATE\n\n    // for pixi v4\n    renderWebGL (renderer) {\n        super.render (renderer)\n        this._renderInternal (renderer)\n    }\n\n    // for pixi v4\n    renderCanvas (renderer) {\n        super.renderCanvas (renderer)\n        this._renderInternal (renderer)\n    }\n\n    // for pixi v5\n    render (renderer) {\n        super.render (renderer)\n        this._renderInternal (renderer)\n    }\n\n    _renderInternal (renderer) {\n        this._resolution = renderer.resolution\n        this._last_renderer = renderer\n        this._canvas_bounds = this._getCanvasBounds ()\n        if (this._needsUpdate ())\n            this._update ()\n    }\n\n    _update () {\n        this._updateDOMInput ()\n        if (this._substituted) this._updateSurrogate ()\n        this._updateBox ()\n    }\n\n    _updateBox () {\n        if (!this._box_generator)\n            return\n\n        if (this._needsNewBoxCache ())\n            this._buildBoxCache ()\n\n        if (this.state == this._previous.state\n            && this._box == this._box_cache[this.state])\n            return\n\n        if (this._box)\n            this.removeChild (this._box)\n\n        this._box = this._box_cache[this.state]\n        this.addChildAt (this._box, 0)\n        this._previous.state = this.state\n    }\n\n    _updateSubstitution () {\n        if (this.state === 'FOCUSED') {\n            this._dom_visible = true\n            this._surrogate.visible = this.text.length === 0\n        } else {\n            this._dom_visible = false\n            this._surrogate.visible = true\n        }\n        this._updateDOMInput ()\n        this._updateSurrogate ()\n    }\n\n    _updateDOMInput () {\n        if (!this._canvas_bounds)\n            return\n\n        this._dom_input.style.top = this._canvas_bounds.top + 'px'\n        this._dom_input.style.left = this._canvas_bounds.left + 'px'\n        this._dom_input.style.transform = this._pixiMatrixToCSS (this._getDOMRelativeWorldTransform ())\n        this._dom_input.style.opacity = this.worldAlpha\n        this._setDOMInputVisible (this.worldVisible && this._dom_visible)\n\n        this._previous.canvas_bounds = this._canvas_bounds\n        this._previous.world_transform = this.worldTransform.clone ()\n        this._previous.world_alpha = this.worldAlpha\n        this._previous.world_visible = this.worldVisible\n    }\n\n    _applyRestriction () {\n        if (this._restrict_regex.test (this.text)) {\n            this._restrict_value = this.text\n        } else {\n            this.text = this._restrict_value\n            this._dom_input.setSelectionRange (\n                this._selection[0],\n                this._selection[1]\n            )\n        }\n    }\n\n\n    // STATE COMPAIRSON (FOR PERFORMANCE BENEFITS)\n\n    _needsUpdate () {\n        return (\n            !this._comparePixiMatrices (this.worldTransform, this._previous.world_transform)\n            || !this._compareClientRects (this._canvas_bounds, this._previous.canvas_bounds)\n            || this.worldAlpha != this._previous.world_alpha\n            || this.worldVisible != this._previous.world_visible\n        )\n    }\n\n    _needsNewBoxCache () {\n        let input_bounds = this._getDOMInputBounds ()\n        return (\n            !this._previous.input_bounds\n            || input_bounds.width != this._previous.input_bounds.width\n            || input_bounds.height != this._previous.input_bounds.height\n        )\n    }\n\n\n    // INPUT SUBSTITUTION\n\n    _createSurrogate () {\n        this._surrogate_hitbox = new PIXI.Graphics ()\n        this._surrogate_hitbox.alpha = 0\n        this._surrogate_hitbox.interactive = true\n        this._surrogate_hitbox.cursor = 'text'\n        this._surrogate_hitbox.on ('pointerdown', this._onSurrogateFocus.bind (this))\n        this.addChild (this._surrogate_hitbox)\n\n        this._surrogate_mask = new PIXI.Graphics ()\n        this.addChild (this._surrogate_mask)\n\n        this._surrogate = new PIXI.Text ('', {})\n        this.addChild (this._surrogate)\n\n        this._surrogate.mask = this._surrogate_mask\n\n        this._updateFontMetrics ()\n        this._updateSurrogate ()\n    }\n\n    _updateSurrogate () {\n        let padding = this._deriveSurrogatePadding ()\n        let input_bounds = this._getDOMInputBounds ()\n\n        this._surrogate.style = this._deriveSurrogateStyle ()\n        this._surrogate.style.padding = Math.max.apply (Math, padding)\n        this._surrogate.y = this._multiline ? padding[0] : (input_bounds.height - this._surrogate.height) / 2\n        this._surrogate.x = padding[3]\n        this._surrogate.text = this._deriveSurrogateText ()\n\n        this._updateSurrogateHitbox (input_bounds)\n        this._updateSurrogateMask (input_bounds, padding)\n    }\n\n    _updateSurrogateHitbox (bounds) {\n        this._surrogate_hitbox.clear ()\n        this._surrogate_hitbox.beginFill (0)\n        this._surrogate_hitbox.drawRect (0, 0, bounds.width, bounds.height)\n        this._surrogate_hitbox.endFill ()\n        this._surrogate_hitbox.interactive = !this._disabled\n    }\n\n    _updateSurrogateMask (bounds, padding) {\n        this._surrogate_mask.clear ()\n        this._surrogate_mask.beginFill (0)\n        this._surrogate_mask.drawRect (padding[3], 0, bounds.width - padding[3] - padding[1], bounds.height)\n        this._surrogate_mask.endFill ()\n    }\n\n    _destroySurrogate () {\n        if (!this._surrogate) return\n\n        this.removeChild (this._surrogate)\n        this.removeChild (this._surrogate_hitbox)\n\n        this._surrogate.destroy ()\n        this._surrogate_hitbox.destroy ()\n\n        this._surrogate = null\n        this._surrogate_hitbox = null\n    }\n\n    _onSurrogateFocus () {\n        this._setDOMInputVisible (true)\n        //sometimes the input is not being focused by the mouseclick\n        setTimeout (this._ensureFocus.bind (this), 10)\n    }\n\n    _ensureFocus () {\n        if (!this._hasFocus ())\n            this.focus ()\n    }\n\n    _deriveSurrogateStyle () {\n        let style = new PIXI.TextStyle ()\n\n        for (var key in this._input_style) {\n            switch (key) {\n                case 'color':\n                    style.fill = this._input_style.color\n                    break\n                case 'fontFamily':\n                case 'fontSize':\n                case 'fontWeight':\n                case 'fontVariant':\n                case 'fontStyle':\n                    style[key] = this._input_style[key]\n                    break\n                case 'letterSpacing':\n                    style.letterSpacing = parseFloat (this._input_style.letterSpacing)\n                    break\n            }\n        }\n\n        if (this._multiline) {\n            style.lineHeight = parseFloat (style.fontSize)\n            style.wordWrap = true\n            style.wordWrapWidth = this._getDOMInputBounds ().width\n        }\n\n        if (this._dom_input.value.length === 0)\n            style.fill = this._placeholderColor\n\n        return style\n    }\n\n    _deriveSurrogatePadding () {\n        let indent = this._input_style.textIndent ? parseFloat (this._input_style.textIndent) : 0\n\n        if (this._input_style.padding && this._input_style.padding.length > 0) {\n            let components = this._input_style.padding.trim ().split (' ')\n\n            if (components.length == 1) {\n                let padding = parseFloat (components[0])\n                return [padding, padding, padding, padding + indent]\n            } else if (components.length == 2) {\n                let paddingV = parseFloat (components[0])\n                let paddingH = parseFloat (components[1])\n                return [paddingV, paddingH, paddingV, paddingH + indent]\n            } else if (components.length == 4) {\n                let padding = components.map (component => {\n                    return parseFloat (component)\n                })\n                padding[3] += indent\n                return padding\n            }\n        }\n\n        return [0, 0, 0, indent]\n    }\n\n    _deriveSurrogateText () {\n        return this._dom_input.value.length === 0 ? this._placeholder : this._dom_input.value\n    }\n\n    _updateFontMetrics () {\n        const style = this._deriveSurrogateStyle ()\n        const font = style.toFontString ()\n\n        this._font_metrics = PIXI.TextMetrics.measureFont (font)\n    }\n\n\n    // CACHING OF INPUT BOX GRAPHICS\n\n    _buildBoxCache () {\n        this._destroyBoxCache ()\n\n        let states = ['DEFAULT', 'FOCUSED', 'DISABLED']\n        let input_bounds = this._getDOMInputBounds ()\n\n        for (let i in states) {\n            this._box_cache[states[i]] = this._box_generator (\n                input_bounds.width,\n                input_bounds.height,\n                states[i]\n            )\n        }\n\n        this._previous.input_bounds = input_bounds\n    }\n\n    _destroyBoxCache () {\n        if (this._box) {\n            this.removeChild (this._box)\n            this._box = null\n        }\n\n        for (let i in this._box_cache) {\n            this._box_cache[i].destroy ()\n            this._box_cache[i] = null\n            delete this._box_cache[i]\n        }\n    }\n\n\n    // HELPER FUNCTIONS\n\n    _hasFocus () {\n        return document.activeElement === this._dom_input\n    }\n\n    _setDOMInputVisible (visible) {\n        this._dom_input.style.display = visible ? 'block' : 'none'\n    }\n\n    _getCanvasBounds () {\n        let rect = this._last_renderer.view.getBoundingClientRect ()\n        let bounds = { top : rect.top, left : rect.left, width : rect.width, height : rect.height }\n        bounds.left += window.scrollX\n        bounds.top += window.scrollY\n        return bounds\n    }\n\n    _getDOMInputBounds () {\n        let remove_after = false\n\n        if (!this._dom_added) {\n            document.body.appendChild (this._dom_input)\n            remove_after = true\n        }\n\n        let org_transform = this._dom_input.style.transform\n        let org_display = this._dom_input.style.display\n        this._dom_input.style.transform = ''\n        this._dom_input.style.display = 'block'\n        let bounds = this._dom_input.getBoundingClientRect ()\n        this._dom_input.style.transform = org_transform\n        this._dom_input.style.display = org_display\n\n        if (remove_after)\n            document.body.removeChild (this._dom_input)\n\n        return bounds\n    }\n\n    _getDOMRelativeWorldTransform () {\n        let canvas_bounds = this._last_renderer.view.getBoundingClientRect ()\n        let matrix = this.worldTransform.clone ()\n\n        matrix.scale (this._resolution, this._resolution)\n        matrix.scale (canvas_bounds.width / this._last_renderer.width,\n            canvas_bounds.height / this._last_renderer.height)\n        return matrix\n    }\n\n    _pixiMatrixToCSS (m) {\n        return 'matrix(' + [m.a, m.b, m.c, m.d, m.tx, m.ty].join (',') + ')'\n    }\n\n    _comparePixiMatrices (m1, m2) {\n        if (!m1 || !m2) return false\n        return (\n            m1.a == m2.a\n            && m1.b == m2.b\n            && m1.c == m2.c\n            && m1.d == m2.d\n            && m1.tx == m2.tx\n            && m1.ty == m2.ty\n        )\n    }\n\n    _compareClientRects (r1, r2) {\n        if (!r1 || !r2) return false\n        return (\n            r1.left == r2.left\n            && r1.top == r2.top\n            && r1.width == r2.width\n            && r1.height == r2.height\n        )\n    }\n}\n\n\nfunction DefaultBoxGenerator (styles) {\n    styles = styles || { fill : 0xcccccc }\n\n    if (styles.default) {\n        styles.focused = styles.focused || styles.default\n        styles.disabled = styles.disabled || styles.default\n    } else {\n        let temp_styles = styles\n        styles = {}\n        styles.default = styles.focused = styles.disabled = temp_styles\n    }\n\n    return function (w, h, state) {\n        let style = styles[state.toLowerCase ()]\n        let box = new PIXI.Graphics ()\n\n        if (style.fill)\n            box.beginFill (style.fill)\n\n        if (style.stroke)\n            box.lineStyle (\n                style.stroke.width || 1,\n                style.stroke.color || 0,\n                style.stroke.alpha || 1\n            )\n\n        if (style.rounded)\n            box.drawRoundedRect (0, 0, w, h, style.rounded)\n        else\n            box.drawRect (0, 0, w, h)\n\n        box.endFill ()\n        box.closePath ()\n\n        return box\n    }\n}\n"],"names":["DefaultBoxGenerator","styles","fill","default","focused","disabled","temp_styles","w","h","state","style","toLowerCase","box","PIXI.Graphics","beginFill","stroke","lineStyle","width","color","alpha","rounded","drawRoundedRect","drawRect","endFill","closePath","PIXI.Container","[object Object]","super","this","_input_style","Object","assign","position","background","border","outline","transformOrigin","lineHeight","input","_box_generator","hasOwnProperty","_multiline","multiline","_box_cache","_previous","_dom_added","_dom_visible","_placeholder","_placeholderColor","_selection","_restrict_value","_createDOMInput","substituteText","_setState","_addListeners","_substituted","substitute","_createSurrogate","_destroySurrogate","placeholder","_update","text","_updateSurrogate","_dom_input","_disabled","maxLength","_max_length","length","setAttribute","restrict","_restrict_regex","regex","RegExp","toString","slice","charAt","value","htmlInput","dom_visible","_setDOMInputVisible","focus","blur","select","key","_updateFontMetrics","_last_renderer","options","_destroyBoxCache","destroy","document","createElement","resize","type","on","_onAdded","bind","_onRemoved","addEventListener","_onInputKeyDown","_onInputInput","_onInputKeyUp","_onFocused","_onBlurred","e","selectionStart","selectionEnd","emit","keyCode","_applyRestriction","_updateSubstitution","body","appendChild","display","removeChild","_updateBox","renderer","render","_renderInternal","renderCanvas","_resolution","resolution","_canvas_bounds","_getCanvasBounds","_needsUpdate","_updateDOMInput","_needsNewBoxCache","_buildBoxCache","_box","addChildAt","_surrogate","visible","top","left","transform","_pixiMatrixToCSS","_getDOMRelativeWorldTransform","opacity","worldAlpha","worldVisible","canvas_bounds","world_transform","worldTransform","clone","world_alpha","world_visible","test","setSelectionRange","_comparePixiMatrices","_compareClientRects","input_bounds","_getDOMInputBounds","height","_surrogate_hitbox","interactive","cursor","_onSurrogateFocus","addChild","_surrogate_mask","PIXI.Text","mask","padding","_deriveSurrogatePadding","_deriveSurrogateStyle","Math","max","apply","y","x","_deriveSurrogateText","_updateSurrogateHitbox","_updateSurrogateMask","bounds","clear","setTimeout","_ensureFocus","_hasFocus","PIXI.TextStyle","letterSpacing","parseFloat","fontSize","wordWrap","wordWrapWidth","indent","textIndent","components","trim","split","paddingV","paddingH","map","component","font","toFontString","_font_metrics","PIXI.TextMetrics","measureFont","states","i","activeElement","rect","view","getBoundingClientRect","window","scrollX","scrollY","remove_after","org_transform","org_display","matrix","scale","m","a","b","c","d","tx","ty","join","m1","m2","r1","r2"],"mappings":"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"}